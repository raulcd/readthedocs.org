version: '3'

volumes:
  web-static:
  web-public-web-root:
  web-user-builds:

services:

  nginx:
    image: nginx
    ports:
      - "80:80"
    links:
      - web
    volumes:
      - ${PWD}/docker/nginx:/etc/nginx/conf.d
      - web-static:/usr/src/app/checkouts/readthedocs.org/static
      - web-user-builds:/usr/src/app/checkouts/readthedocs.org/user_builds
      - web-public-web-root:/usr/src/app/checkouts/readthedocs.org/public_web_root

  web:
    build:
      context: .
      dockerfile: ${PWD}/docker/Dockerfile
    volumes:
      - ${PWD}:/usr/src/app/checkouts/readthedocs.org
      - ${PWD}/../readthedocs-ext:/usr/src/app/checkouts/readthedocs-ext
      - ${PWD}/docker/settings/web.py:/usr/src/app/checkouts/readthedocs.org/readthedocs/settings/dev.py
      - web-static:/usr/src/app/checkouts/readthedocs.org/static
      - web-user-builds:/usr/src/app/checkouts/readthedocs.org/user_builds
      - web-public-web-root:/usr/src/app/checkouts/readthedocs.org/public_web_root
    links:
      - database
      - cache
    environment:
      - DJANGO_SETTINGS_SKIP_LOCAL=t

  # TODO: how do we configure this `celery` container to sync the files into `web`?
  # There is a FILE_SYNCER setting that uses readthedocs.builder.syncers classes
  # This needs ``rsync`` and ``openssh`` to be installed in celery image,
  # and ``openssh`` server configured and running on build
  celery:
    build:
      context: .
      dockerfile: ${PWD}/docker/Dockerfile
    volumes:
      - ${PWD}:/usr/src/app/checkouts/readthedocs.org
      - ${PWD}/../readthedocs-ext:/usr/src/app/checkouts/readthedocs-ext
      - ${PWD}/docker/settings/celery.py:/usr/src/app/checkouts/readthedocs.org/readthedocs/settings/dev.py
      - web-user-builds:/usr/src/app/checkouts/readthedocs.org/user_builds
      - web-public-web-root:/usr/src/app/checkouts/readthedocs.org/public_web_root
    links:
      - database
      - cache
      - search
    environment:
      - DJANGO_SETTINGS_SKIP_LOCAL=t
    command: ["python3", "-m", "celery", "worker", "-A", "readthedocs.worker", "-Ofair", "-c", "1", "-Q", "web,web01,reindex", "-l", "DEBUG"]

  build:
    build:
      context: .
      dockerfile: ${PWD}/docker/Dockerfile
    volumes:
      - ${PWD}:/usr/src/app/checkouts/readthedocs.org
      - ${PWD}/../readthedocs-ext:/usr/src/app/checkouts/readthedocs-ext
      - ${PWD}/docker/settings/build.py:/usr/src/app/checkouts/readthedocs.org/readthedocs/settings/dev.py

      # The python code at readthedocs/doc_builder/environments.py
      # mounts `self.project.doc_path`. We need to share this path
      # between our host, the build container, and the container that
      # is created inside the build container. Because of this, we
      # need the path in the main host.
      - /usr/src/app/checkouts/readthedocs.org/user_builds:/usr/src/app/checkouts/readthedocs.org/user_builds

      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - cache
    environment:
      - DJANGO_SETTINGS_SKIP_LOCAL=t
    command: ["python3", "-m", "celery", "worker", "-A", "readthedocs.worker", "-Ofair", "-c", "1", "-Q", "builder,celery,default,build01", "-l", "DEBUG"]

  cache:
    image: redis:3.2.7

  # You may need to increase the memory for vm
  # sudo sysctl -w vm.max_map_count=262144
  search:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2

  database:
    image: postgres:11.1
    environment:
      - POSTGRES_USER=docs_user
      - POSTGRES_PASSWORD=docs_pwd
      - POSTGRES_DB=docs_db
